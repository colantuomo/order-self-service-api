generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum OrderStatus {
    RECEIVED
    IN_PREPARATION
    DONE
    READY
}

enum PaymentStatus {
    PENDING
    PAID
    CANCELED
}

model Order {
    id         String       @id @default(uuid())
    createdAt  DateTime     @default(now())
    totalValue Float        @default(0)
    customer   Customer?    @relation(fields: [customerId], references: [id])
    customerId String?
    payment    Payment?
    items      OrderItems[]
    status     OrderStatus

    @@map("orders")
}

model OrderItems {
    orderId   String
    order     Order   @relation(fields: [orderId], references: [id])
    productId String
    product   Product @relation(fields: [productId], references: [id])
    quantity  Int

    @@id([orderId, productId])
    @@map("order-item")
}

model Product {
    id          String       @id @default(uuid())
    name        String
    price       Float
    description String?
    category    String
    orders      OrderItems[]

    @@map("products")
}

model Customer {
    id     String  @id @default(uuid())
    cpf    String  @unique
    name   String
    email  String
    orders Order[]

    @@map("customers")
}

model Payment {
    id                String    @id @default(uuid())
    createdAt         DateTime  @default(now())
    order             Order     @relation(fields: [orderId], references: [id])
    orderId           String    @unique
    amount            Float
    status            PaymentStatus
    externalPaymentId String?
    updatedAt         DateTime? @updatedAt

    @@map("payments")
}
